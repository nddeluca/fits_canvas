// Generated by CoffeeScript 1.3.3
(function() {
  var Display, FITS, FitsDisplay, ScaleProcessor, scales,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Display = require('./display');

  scales = require('./scales');

  ScaleProcessor = require('./scale_processor');

  FITS = require('fits');

  FitsDisplay = (function(_super) {

    __extends(FitsDisplay, _super);

    function FitsDisplay(container, color, scale, desiredWidth, fitsFile) {
      var fits, image, scaledHeight, scaledWidth, _ref;
      fits = new FITS.File(fitsFile);
      image = fits.getDataUnit();
      this.fitsData = image.getFrame();
      this.fitsWidth = image.width;
      this.fitsHeight = image.height;
      _ref = image.getExtremes(), this.fitsMin = _ref[0], this.fitsMax = _ref[1];
      scaledWidth = ~~desiredWidth;
      this.scaleRatio = this.fitsWidth / scaledWidth;
      scaledHeight = ~~(this.fitsHeight / this.scaleRatio);
      this.buildScaleBuffers();
      this.buildColorBuffers();
      this.scale = scales.linear;
      FitsDisplay.__super__.constructor.call(this, container, scaledWidth, scaledHeight);
    }

    FitsDisplay.prototype.buildScaleBuffers = function() {
      this.scaleBuffer = new ArrayBuffer(this.fitsWidth * this.fitsHeight);
      return this.scaleView8 = new Uint8ClampedArray(this.scaleBuffer);
    };

    FitsDisplay.prototype.buildColorBuffers = function() {
      this.colorBuffer = new ArrayBuffer(this.fitsWidth * this.fitsHeight * 4);
      this.colorView8 = new Uint8ClampedArray(this.colorBuffer);
      return this.colorView32 = new Uint32Array(this.colorBuffer);
    };

    FitsDisplay.prototype.processImage = function() {
      var scaler;
      scaler = new ScaleProcessor(this.scale);
      scaler.process(this.fitsData, this.scaleView8, this.fitsMin, this.fitsMax, this.fitsWidth, this.fitsHeight);
      return console.log(this.scaleView8);
    };

    return FitsDisplay;

  })(Display);

  if (typeof module !== "undefined" && module !== null) {
    module.exports = FitsDisplay;
  }

}).call(this);
